@model contact.app.mvc.Models.ModelRegister
@{

    ViewData["Title"] = "Register";
    Layout = "~/Views/Shared/_Layout_Start.cshtml";
}

<div class="row align-items-center g-lg-5 py-5">
    <div class="col-lg-7 text-center text-lg-start">
        <h1 class="display-4 fw-bold lh-1 mb-3">Register</h1>
        <p class="col-lg-10 fs-4">Use this form to register your username. Registered users can login and manage contacts.</p>
    </div>
    <div class="col-md-10 mx-auto col-lg-5">
        <form asp-action="Register" class="p-4 p-md-5 border rounded-3 bg-light needs-validation" novalidate>
            @if (!string.IsNullOrEmpty(Model.Message))
            {
                <div class="mb-3">
                    <small class="text-muted">@Html.Raw(Model.Message)</small>
                </div>
            }
            <div class="form-floating mb-3">
                <input type="text" class="form-control" asp-for="Username" placeholder="Username" required />
                <label for="Username">Username</label>
            </div>
            <div class="form-floating mb-3">
                <input type="email" class="form-control" asp-for="Email" placeholder="Email" required />
                <label for="Email">Email</label>
            </div>
            <div class="form-floating mb-3">
                <input type="password" class="form-control" asp-for="Password" placeholder="Password" required />
                <label for="Password">Password</label>
            </div>
            <div class="form-floating mb-3">
                <input type="password" class="form-control" asp-for="PasswordConfirm" placeholder="Password" required />
                <label for="PasswordConfirm">Confirm</label>
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
</div>
@section Scripts{
    <script type="text/javascript">(() => {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.needs-validation');

            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
                form.addEventListener('submit',
                    event => {
                        if (!form.checkValidity()) {
                            event.preventDefault();
                            event.stopPropagation();
                        }

                        form.classList.add('was-validated');
                    },
                    false);
            });
        })();</script>
}